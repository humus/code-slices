Group checking conditions
Slice if the file exists
  if [ -f $file_variable ]; then
      #
  fi
Slice if there are arguments
  if [ "$#" == "0" ]; then
      #
  fi
Slice if string is zero length
  if [ -z "$a_variable" ]; then
    #
  fi
Slice if string is not zero length
  if [ -n "$a_variable" ]; then
    #
  fi
Group custom utility sentences
Slice Save file to a variable
  lines=$(< file)
Slice export function
  export -f function_name
Slice use exported function in subshell
  xargs -n 1 -i bash -c 'function_name {}'
Group variables
Slice iterate_array
  for str in "${projects[@]}"; do
    echo $str
  done;
Slice define_array
  arr_var=(element1 element2 'element 3')
FluentSlice effects
RESET="\033[0m"
BOLD="\e[1mBold"
DIM="\e[2m"
UNDERLINED="\e[4m"
BLINK="\e[5m"
INVERTED="\e[7m"
HIDDEN="\e[8m"

FluentSlice color_defs
RESET="\033[0m"
TERMINAL_DEFAULT="\033[39m"
BLACK="\033[30m"
RED="\033[31m"
GREEN="\033[32m"
YELLOW="\033[33m"
BLUE="\033[34m"
MAGENTA="\033[35m"
CYAN="\033[36m"
LIGHT_GRAY="\033[37m"
DARK_GRAY="\033[90m"
LIGHT_RED="\033[91m"
LIGHT_GREEN="\033[92m"
LIGHT_YELLOW="\033[93m"
LIGHT_BLUE="\033[94m"
LIGHT_MAGENTA="\033[95m"
LIGHT_CYAN="\033[96m"
WHITE="\033[97m"

Group grep sed awk
FluentSlice grep with context
$N=5
grep -"$N"
grep -C $N
grep -A $N -B $N

FluentSlice awk print from matching to end
awk '/search_pattern/,0' filename
